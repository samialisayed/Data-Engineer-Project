# Read metrics from MQTT topic(s)
                     #[[inputs.mqtt_consumer]]
  ## MQTT broker URLs to be used. The format should be scheme://host:port, schema can be tcp, ssl, or ws.
                      #servers = ["tcp://mqtt.eclipse.org:1883"]
  ## MQTT QoS, must be 0, 1, or 2
                      #qos = 2
  ## Connection timeout for initial connection in seconds
  #connection_timeout = "30s"
  ## Topics to subscribe to
					 # topics = [
   
						#"dsei2400",
					  #]
  # if true, messages that can't be delivered while the subscriber is offline will be delivered when it comes back (such 
  # as on service restart). NOTE: if true, client_id MUST be set
                 #persistent_session = false
  # If empty, a random client ID will be generated.
                 #client_id = ""
  ## username and password to connect MQTT server.
  # username = "telegraf" password = "metricsmetricsmetricsmetrics"
  ## Optional SSL Config
  # ssl_ca = "/etc/telegraf/ca.pem" ssl_cert = "/etc/telegraf/cert.pem" ssl_key = "/etc/telegraf/key.pem"
  ## Use SSL but skip chain & host verification
  # insecure_skip_verify = false
  ## Data format to consume. Each data format has its own unique set of configuration options, read more about them 
  ## here: https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  #data_format = "influx"
           # data_format = "value"
###############################################################################
# Read metrics from MQTT topic(s) FLOATS
[[inputs.mqtt_consumer]]
  name_override = "living_room7"
  servers = ["tcp://mqtt.eclipse.org:1883"]
  qos = 2
  connection_timeout = "8000s"
  topics = [
   "dsei2400/zhiqiang/#",
  ]
 # persistent_session = false
  #client_id = ""
 #data_format = "json"
 data_format = "json"
 json_string_fields = ["latitude","longitude"]
  # insecure_skip_verify = false data_format = "influx"
  #data_format = "value"
  data_type = "integer"

###############################################################################
# Read metrics from MQTT topic(s) strings
#[[inputs.mqtt_consumer]]
 # name_override = "mqtt_consumer_string"
 # servers = ["tcp://mqtt.eclipse.org:1883"]
 # qos = 2
  #connection_timeout = "30s"
  #topics = [
   #"dsei2400",
  #]
  #persistent_session = false
  #client_id = ""
  # insecure_skip_verify = false data_format = "influx"
    # insecure_skip_verify = false data_format = "influx"
  #data_format = "value"
  #data_type = "string"
###############################################################################




###############################################################################
#                            OUTPUT PLUGINS #
###############################################################################
# Configuration for sending metrics to InfluxDB
[[outputs.influxdb]]
  ## The full HTTP or UDP URL for your InfluxDB instance.
  ##
  ## Multiple URLs can be specified for a single cluster, only ONE of the
  ## urls will be written to each interval.
  # urls = ["unix:///var/run/influxdb.sock"]
  # urls = ["udp://127.0.0.1:8089"]
   urls = ["http://127.0.0.1:8086"]

  ## The target database for metrics; will be created as needed.
  ## For UDP url endpoint database needs to be configured on server side.
   database = "sensors"

  ## The value of this tag will be used to determine the database.  If this
  ## tag is not set the 'database' option is used as the default.
  # database_tag = ""
  
  ## If true, the 'database_tag' will not be included in the written metric.
  # exclude_database_tag = false

  ## If true, no CREATE DATABASE queries will be sent.  Set to true when using
  ## Telegraf with a user without permissions to create databases or when the
  ## database already exists.
  skip_database_creation = true

  ## Name of existing retention policy to write to.  Empty string writes to
  ## the default retention policy.  Only takes effect when using HTTP.
  # retention_policy = ""

  ## The value of this tag will be used to determine the retention policy.  If this
  ## tag is not set the 'retention_policy' option is used as the default.
  # retention_policy_tag = ""

  ## If true, the 'retention_policy_tag' will not be included in the written metric.
  # exclude_retention_policy_tag = false

  ## Write consistency (clusters only), can be: "any", "one", "quorum", "all".
  ## Only takes effect when using HTTP.
  # write_consistency = "any"

  ## Timeout for HTTP messages.
   timeout = "9000s"

  ## HTTP Basic Auth
   username = "todd"
  password = "123456"

